[{"C:\\repo\\payment\\src\\index.js":"1","C:\\repo\\payment\\src\\app.js":"2","C:\\repo\\payment\\src\\App.js":"3","C:\\repo\\payment\\src\\NavBar.js":"4","C:\\repo\\payment\\src\\Components\\Checkout\\Checkout.js":"5","C:\\repo\\payment\\src\\Components\\ProductsTable.js":"6","C:\\repo\\payment\\src\\Components\\SaleSummary.js":"7","C:\\repo\\payment\\src\\Components\\PaymentReceived.js":"8"},{"size":250,"mtime":1682653486143,"results":"9","hashOfConfig":"10"},{"size":434,"mtime":1682588968549,"results":"11","hashOfConfig":"12"},{"size":3821,"mtime":1682655755094,"results":"13","hashOfConfig":"10"},{"size":1053,"mtime":1682653599003,"results":"14","hashOfConfig":"10"},{"size":4164,"mtime":1682652936716,"results":"15","hashOfConfig":"10"},{"size":2034,"mtime":1682641665984,"results":"16","hashOfConfig":"10"},{"size":1666,"mtime":1682650907912,"results":"17","hashOfConfig":"10"},{"size":2937,"mtime":1682656003447,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jqzc7u",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c21tpa",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\repo\\payment\\src\\index.js",[],[],[],"C:\\repo\\payment\\src\\app.js",[],[],"C:\\repo\\payment\\src\\App.js",["46","47"],[],"C:\\repo\\payment\\src\\NavBar.js",[],[],"C:\\repo\\payment\\src\\Components\\Checkout\\Checkout.js",[],[],"C:\\repo\\payment\\src\\Components\\ProductsTable.js",["48"],[],"import React, { useState } from \"react\";\r\nimport { Container, Table, Button } from \"react-bootstrap\";\r\n\r\nfunction ProductsTable({ addToSale }) {\r\n  const [products] = useState([\r\n    { id: 1, name: \"Product 1\", price: 10.0, sku: \"134242\" },\r\n    { id: 2, name: \"Product 2\", price: 20.0, sku: \"34242\" },\r\n    { id: 3, name: \"Product 3\", price: 30.0, sku: \"2424\" }\r\n  ]);\r\n\r\n  const handleRowClick = (productId) => {\r\n    const productToAdd = products.find((product) => product.id === productId);\r\n    addToSale(productToAdd);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <h2 className=\"pb-4\">Products</h2>\r\n      <Table hover>\r\n        <thead className=\"productsThead\">\r\n          <tr>\r\n            <th style={{ paddingLeft: \"0\", paddingBottom: \"24px\" }}>Product</th>\r\n            <th style={{ paddingBottom: \"24px\" }} className=\"rightAligned\">Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id} onClick={() => handleRowClick(product.id)}>\r\n              <td className=\"d-flex\">\r\n                <img\r\n                  src=\"https://via.placeholder.com/45\"\r\n                  alt=\"product\"\r\n                  style={{\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    border: \"1px solid grey\"\r\n                  }}\r\n                />\r\n                <div className=\"productSku\">\r\n                  <div>{product.name}</div>\r\n                  <div style={{ fontSize: \"10px\" }}>{product.sku}</div>\r\n                </div>\r\n              </td>\r\n              <td className=\"rightAligned\">${product.price.toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr className=\"rightAligned\">\r\n            <td colSpan=\"2\" className=\"pt-3 pr-0\">\r\n              <Button className=\"btnHeight\" variant=\"primary\">Create New Product</Button>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductsTable;","C:\\repo\\payment\\src\\Components\\SaleSummary.js",["49"],[],"import React from \"react\";\r\nimport { Container, Table, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SaleSummary({ cartItems }) {\r\n  const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  const totalPrice = cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <h2 className=\"pb-4\">Sales Summary</h2>\r\n      <Table className=\"table table-borderless table-hover\">\r\n        <tbody className=\"saleTable fw-bold\">\r\n          {cartItems.map((item, index) => (\r\n            <tr className=\"productTr\" key={item.id}>\r\n              <td className=\"tdQuantity\">{item.quantity}</td>\r\n              <td>\r\n                <span>{item.name}</span>\r\n              </td>\r\n              <td className=\"rightAligned\">{(item.price * item.quantity).toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n          <div className=\"pt-4\" />\r\n\r\n        </tbody>\r\n        \r\n      </Table>\r\n      <tr className=\"saleTotalTr fw-normal\">\r\n            <td className=\"text-right\" style={{ letterSpacing: \"2px\" }}>\r\n              <div className=\"totalTd\">\r\n              <b className=\"pr-2\">SALE TOTAL</b> {totalItems} items\r\n              </div>\r\n            </td>\r\n            <td className=\"text-right\"></td>\r\n            <td className=\"rightAligned\">${totalPrice.toFixed(2)}</td>\r\n          </tr>\r\n      <div className=\"d-flex justify-content-end pt-4\">\r\n        <Link to=\"/\">\r\n          <Button className=\"btnHeight\" variant=\"primary\">\r\n            Back\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SaleSummary;","C:\\repo\\payment\\src\\Components\\PaymentReceived.js",["50","51","52","53","54"],[],{"ruleId":"55","severity":1,"message":"56","line":18,"column":20,"nodeType":"57","messageId":"58","endLine":18,"endColumn":31},{"ruleId":"55","severity":1,"message":"59","line":35,"column":9,"nodeType":"57","messageId":"58","endLine":35,"endColumn":23},{"ruleId":"55","severity":1,"message":"60","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"61","line":4,"column":27,"nodeType":"57","messageId":"58","endLine":4,"endColumn":37},{"ruleId":"55","severity":1,"message":"62","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":29,"column":11,"nodeType":"65","endLine":29,"endColumn":80},{"ruleId":"63","severity":1,"message":"64","line":33,"column":11,"nodeType":"65","endLine":33,"endColumn":79},"no-unused-vars","'setProducts' is assigned a value but never used.","Identifier","unusedVar","'removeFromCart' is assigned a value but never used.","'Container' is defined but never used.","'faEnvelope' is defined but never used.","'cartItems' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]